-- CHAP10 DML (DATA MANIPULATION LANGUAGE)
-- 10 -1
CREATE TABLE DEPT_TEMP
         AS SELECT * FROM DEPT;
         
-- 10-2
SELECT * FROM DEPT_TEMP;

-- 1분복습
CREATE TABLE EMP_TEMP10
         AS SELECT * FROM EMP;
SELECT * FROM EMP_TEMP10;

-- 10-3 데이터 추가하기
INSERT INTO DEPT_TEMP (DEPTNO, DNAME, LOC)
        VALUES (50, 'DATEBASE', 'SEOUL');
SELECT * FROM DEPT_TEMP;
COMMIT;


-- INSERT 오류
INSERT INTO DEPT_TEMP(DEPTNO, DNAME, LOC)
        VALUES (60, 'NETWORK'); -- SQL 오류: ORA-00947: not enough values
                                                        -- 00947. 00000 -  "not enough values"
        
INSERT INTO DEPT_TEMP(DEPTNO, DNAME, LOC)
        VALUES (60, 'NETWORK', 'BUSAN', 'WORKNG'); -- SQL 오류: ORA-00913: too many values
                                                                                               -- 00913. 00000 -  "too many values"
                                                                                               
INSERT INTO DEPT_TEMP(DEPTNO, DNAME, LOC)
        VALUES ('WORNG', 'NETWORK', 'BUSAN'); -- SQL 오류: ORA-01722: invalid number
        
INSERT INTO DEPT_TEMP(DEPTNO, DNAME, LOC)
        VALUES (600, 'NETWORK', 'BUSAN'); -- SQL 오류: ORA-01438: value larger than specified precision allowed for this column
        
-- 10-4 열 지정 없이 데이터 추가하기
INSERT INTO DEPT_TEMP
        VALUES (60, 'NETWORK', 'BUSAN');
COMMIT;

SELECT * FROM DEPT_TEMP;

-- 10-5 NULL을 지정하여 입력하기
INSERT INTO DEPT_TEMP
        VALUES (70, 'WEB', NULL);       -- 문자열 NULL을 넣으면 NULL이라는 LOC가 생기는거임
COMMIT;
SELECT * FROM DEPT_TEMP;

INSERT INTO DEPT_TEMP
        VALUES (70, 'WEB', 'NULL');       -- 문자열 NULL을 넣으면 NULL이라는 LOC가 생기는거임
SELECT * FROM DEPT_TEMP;
ROLLBACK;
SELECT * FROM DEPT_TEMP;


INSERT INTO DEPT_TEMP
        VALUES (80, 'MOBILE', '');       -- 빈 공백문자열 (공백이 들어가지 않은) 넣어줘도 NULL 값이 들어감
SELECT * FROM DEPT_TEMP;
--ROLLBACK;
COMMIT;

-- 10-7. 열을 명시하지 않고 INSERT 문 작성
INSERT INTO DEPT_TEMP(DEPTNO, LOC)
        VALUES (90, 'INCHEON');     -- 부서명이 NULL
COMMIT;
-- 10-8
CREATE TABLE EMP_TEMP
    AS SELECT * FROM EMP WHERE 1 <> 1;

SELECT * FROM EMP_TEMP;

SELECT * FROM EMP;

-- 10-9
CREATE TABLE EMP_TEMP
                    AS SELECT * FROM EMP WHERE 1<> 1; -- 이때 데이터는 아무것도 없음
                    
SELECT * FROM EMP_TEMP; -- 껍데기만 생성 (열이름)


SELECT * FROM EMP WHERE 1=1
AND HIREDATE = '1981/04/02';
/*
--10-5 NULL을 명시적 지정하여 입력하기
INSERT INTO DEPT_TEMP (DEPTNO, DNAME, LOC)
     VALUES ( 70, 'WEB', NULL);
COMMIT;
SELECT * FROM DEPT_TEMP;

INSERT INTO DEPT_TEMP (DEPTNO, DNAME, LOC)
     VALUES ( 80, 'MOBILE', '');
     
SELECT * FROM DEPT_TEMP;
COMMIT;

-- 10-7 열을 명시하지 않고 INSERT  문 작성
INSERT INTO DEPT_TEMP(DEPTNO, LOC)
       VALUES (90, 'INCHEON');
COMMIT;    

-- 10-8
CREATE TABLE EMP_TEMP
    AS SELECT * FROM EMP WHERE 1 <> 1;

SELECT * FROM EMP_TEMP;

SELECT * FROM EMP;


*/

-- 10-09 INSERT 문으로 날짜 데이터 입력( 날짜사이에 /)
INSERT INTO EMP_TEMP
(EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
VALUES(9999,'홍길동', 'PRESIDENT', NULL, '2001/01/01',5000,1000,10);

COMMIT;
SELECT * FROM EMP_TEMP;


INSERT INTO EMP_TEMP
(EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
VALUES
(1111, '성춘향', 'MANAGER', 9999, '2001-01-05', 4000, NULL, 20);

SELECT * FROM EMP_TEMP;

-- 날짜 데이터 입력 시 유의점
-- 년월일 반대로 일/월/년 -> 오류발생
INSERT INTO EMP_TEMP
(EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
VALUES
(2111, '이순신', 'MANAGER', 9999, '07/01/2001', 4000, NULL, 20); -- ORA-01830: date format picture ends before converting entire input string

-- 10-12 TO_DATE 함수를 사용해서 수정
INSERT INTO EMP_TEMP
(EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
VALUES
(2111, '이순신', 'MANAGER', 9999, 
TO_DATE('07/01/2001','DD/MM/YYYY'), 4000, NULL, 20); 

SELECT SYSDATE FROM DUAL;
-- 10-13
INSERT INTO EMP_TEMP (EMPNO, ENAME, JOB, MGR, HIREDATE,SAL, COMM,DEPTNO)
VALUES (3111, '심청이', 'MANAGER', 9999, SYSDATE, 4000, NULL, 30);

SELECT EMPNO, ENAME, TO_CHAR(HIREDATE, 'YYYY/MM/DD HH24:MI:SS')
FROM EMP_TEMP;

-- 10-14 서브쿼리로 여러 데이터 추가하기
INSERT INTO EMP_TEMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
        SELECT E.EMPNO, E.ENAME, E.JOB, E.MGR, E.HIREDATE, E.SAL, E.COMM, E.DEPTNO
          FROM EMP E, SALGRADE S
        WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL
             AND S.GRADE = 1;
SELECT * FROM EMP_TEMP;

SELECT * FROM DUAL;


SELECT * 
  FROM COUNTRIES;
 INSERT INTO COUNTRIES (COUNTRY_ID, COUNTRY_NAME, REGION_ID)
 VALUES ('AT', 'Austria', 1);
INSERT INTO COUNTRIES (COUNTRY_ID, COUNTRY_NAME, REGION_ID)
 VALUES ('NO', 'Norway', 1);
INSERT INTO COUNTRIES (COUNTRY_ID, COUNTRY_NAME, REGION_ID)
 VALUES ('ID', 'Indonesia', 3);
INSERT INTO COUNTRIES (COUNTRY_ID, COUNTRY_NAME, REGION_ID)
 VALUES ('TR', 'Turkey', 1);
COMMIT;
SELECT * FROM DEPARTMENTS;
INSERT INTO DEPARTMENTS (DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
VALUES (280, 'Advertising', 200, 1700);
INSERT INTO DEPARTMENTS (DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
VALUES (290, 'Sales Support', 145, 1700);
INSERT INTO DEPARTMENTS (DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
VALUES (300, 'Education', NULL, 1700);
INSERT INTO DEPARTMENTS (DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
VALUES (310, 'E-Commerce', NULL, 1700);
COMMIT;

-- 10장 -2절 테이블에 있는 데이터 수정하기
CREATE TABLE DEPT_TEMP2 -- CREATE는 자동 커밋이 되므로 주의할 것 롤백이 안됨
         AS  SELECT * FROM DEPT;

SELECT * FROM DEPT_TEMP2;

-- UPDATE를 만들땐 항상 SELECT 문을 먼저 만들고 해야함 안그러면 전체가 다바뀌고 커밋이 되고 그런식이라 되돌릴수가없음
--10-16
UPDATE DEPT_TEMP2
        SET LOC = 'SEOUL';
SELECT * FROM DEPT_TEMP2
WHERE DEPTNO = 40;

UPDATE DEPT_TEMP2
      SET  DNAME = 'DATEBASE'
      , LOC = 'SEOUL'
    WHERE DEPTNO = 40;
    COMMIT;
SELECT * FROM DEPT_TEMP2;


UPDATE EMP_TEMP
        SET COMM = 50
        WHERE SAL <=2500;

SELECT *
  FROM EMP_TEMP;
COMMIT;

-- 서브쿼리 사용 수정
SELECT DNAME, LOC
  FROM DEPT
WHERE DEPTNO = 40;

UPDATE DEPT_TEMP2
  SET (DNAME, LOC) = (SELECT DNAME, LOC  FROM DEPT WHERE DEPTNO = 40)
WHERE DEPTNO = 40; 
SELECT * FROM DEPT_TEMP2;


-- 열 하나 하나 수정하는 경우
UPDATE DEPT_TEMP2
  SET DNAME = (SELECT DNAME FROM DEPT WHERE DEPTNO  = 40)
              , LOC = (SELECT LOC FROM DEPT WHERE DEPTNO = 40);

-- UPDATE 문의 WHERE  절에 서브쿼리 사용가능
UPDATE DEPT_TEMP2
    SET LOC = 'SEOUL'
WHERE DEPTNO = (SELECT DEPTNO FROM DEPT_TEMP2 WHERE DNAME = 'OPERATIONS');


SELECT * FROM JOBS
WHERE JOB_ID  IN ('ADV', 'IT ENG', 'IT RES');

INSERT INTO JOBS
VALUES ('ADV', 'Advisor', 10000, 20000);
INSERT INTO JOBS
VALUES ('IT ENG', 'Engineer', 8000, 15000);
INSERT INTO JOBS
VALUES ('IT RES', 'Researcher', 12000, 22000);

SELECT * FROM JOBS
WHERE JOB_ID  IN ('ADV', 'IT ENG', 'IT RES');
commit;



-- 상단 테이블
SELECT * FROM DEPARTMENTS
WHERE DEPARTMENT_NAME IN ('Advertising', 'Sales Support', 'Education', 'E-Commerce'); -- 데이터 확인

UPDATE DEPARTMENTS
       SET MANAGER_ID = 102
WHERE DEPARTMENT_NAME IN ('Education', 'E-Commerce'); -- MANAGER_ID 변경

UPDATE DEPARTMENTS
       SET LOCATION_ID = 2000
WHERE DEPARTMENT_NAME IN ('Advertising', 'Sales Support', 'Education', 'E-Commerce'); --LOCATION_ID 변경

SELECT * FROM DEPARTMENTS
WHERE DEPARTMENT_NAME IN ('Advertising', 'Sales Support', 'Education', 'E-Commerce'); -- 변경사항 확인
COMMIT; -- 데이터 확인 후 COMMIT

-- 하단 테이블
SELECT * FROM JOBS
WHERE JOB_ID IN ('ADV', 'IT ENG', 'IT RES');                -- 데이터 확인

UPDATE JOBS
        SET MIN_SALARY = 12000,
               MAX_SALARY = 22000
WHERE JOB_ID = 'ADV';                   -- 1행의 ADV 변경

UPDATE JOBS
        SET MAX_SALARY = 16000
WHERE JOB_ID = 'IT ENG';                -- 2행의 IT ENG 변경

UPDATE JOBS
        SET JOB_TITLE = 'Research Engineer',
               MAX_SALARY = 24000
WHERE JOB_ID = 'IT RES';                    -- 3행의 IT RES 변경

SELECT * FROM JOBS
WHERE JOB_ID IN ('ADV', 'IT ENG', 'IT RES');                -- 데이터 확인
COMMIT; -- 데이터 확인 후 COMMIT

CREATE TABLE EMP_TEMP2
        AS SELECT * FROM EMP;

SELECT * FROM EMP_TEMP2;

SELECT * FROM EMP_TEMP2
WHERE JOB = 'MANAGER';

DELETE FROM EMP_TEMP2
WHERE JOB = 'MANAGER';

SELECT * FROM EMP_TEMP2;

SELECT E.EMPNO
  FROM EMP_TEMP2 E, SALGRADE S
WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL
     AND S.GRADE = 3
     AND E.DEPTNO = 30; -- 7499 -- 7844

SELECT * 
  FROM EMP_TEMP2
WHERE EMPNO IN (7499, 7844);

DELETE FROM EMP_TEMP2
WHERE EMPNO IN (SELECT E.EMPNO  FROM EMP_TEMP2 E, SALGRADE S WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL  AND S.GRADE = 3   AND E.DEPTNO = 30);

SELECT * FROM EMP_TEMP2;

COMMIT;

SELECT COUNT(*) FROM EMP_TEMP2;

DELETE FROM EMP_TEMP2;
ROLLBACK;

DML -- INSERT, UPDATE, DELETE
DDL;

TRUNCATE TABLE EMP_TEMP2; -- DROP이나 DLETE보다 훨씬빠름 -- 데이터만 삭제

CREATE TABLE CHAP10HW_EMP
        AS SELECT * FROM EMP;
CREATE TABLE CHAP10HW_DEPT
        AS SELECT * FROM DEPT;
CREATE TABLE CHA10HW_SALGRADE
        AS SELECT * FROM SALGRADE;



INSERT INTO CHAP10HW_DEPT (DEPTNO, DNAME, LOC)
VALUES (50, 'ORACLE', 'BUSAN');
INSERT INTO CHAP10HW_DEPT (DEPTNO, DNAME, LOC)
VALUES (60, 'SQL', 'ILSAN');
INSERT INTO CHAP10HW_DEPT (DEPTNO, DNAME, LOC)
VALUES (70, 'SELECT', 'INCHEON');
INSERT INTO CHAP10HW_DEPT (DEPTNO, DNAME, LOC)
VALUES (80, 'DML', 'BUNDANG');
SELECT * FROM CHAP10HW_DEPT;
COMMIT;

SELECT * FROM CHAP10HW_EMP; --TO_DATE('07/01/2001','DD/MM/YYYY')
--TEST_USER1
INSERT INTO CHAP10HW_EMP VALUES (7201, 'TEST_USER1', 'MANAGER', 7788, '2016/01/02', 4500, NULL, 50);
--TEST_USER2
INSERT INTO CHAP10HW_EMP VALUES (7202, 'TEST_USER2', 'CLERK', 7201, TO_DATE('02/21/2016','MM/DD/YYYY'), 1800, NULL, 50);
--TEST_USER3
INSERT INTO CHAP10HW_EMP VALUES (7203, 'TEST_USER3', 'ANALYST', 7201, TO_DATE('2016_04_11','YYYY_MM_DD'), 3400, NULL, 60);
--TEST_USER4
INSERT INTO CHAP10HW_EMP VALUES (7204, 'TEST_USER4', 'SALESMAN', 7201, TO_DATE('31+05+2016','DD+MM+YYYY'), 2700, 300, 60);
--TEST_USER5
INSERT INTO CHAP10HW_EMP VALUES (7205, 'TEST_USER5', 'CLERK', 7201, TO_DATE('07-20-2016','MM-DD-YYYY'), 2600, NULL, 70);
--TEST_USER6
INSERT INTO CHAP10HW_EMP VALUES (7206, 'TEST_USER6', 'CLERK', 7201, TO_DATE('09\08\2016','MM\DD\YYYY'), 2600, NULL, 70);
--TEST_USER7
INSERT INTO CHAP10HW_EMP VALUES (7207, 'TEST_USER7', 'LECTURER', 7201, TO_DATE('2016%28%10','YYYY%DD%MM'), 2300, NULL, 80); -- & 는 구분자 못쓰네... 대체 입력 뜸 -- 이따 점심먹고와서 물어보기
--TEST_USER8
INSERT INTO CHAP10HW_EMP VALUES (7208, 'TEST_USER8', 'STUDENT', 7201, TO_DATE('2018*03*09','YYYY*MM*DD'), 1200, NULL, 80);

SELECT * FROM CHAP10HW_EMP;
COMMIT;

-- CHAP10HW_EMP에 속한 사원 중 50번 부서에서 근무하는 사원들의 평균 급여보다 많은 급여를 받고 있는 사원들을 70번 부서로 옮기는 SQL 문을 작성하시오
SELECT * 
  FROM CHAP10HW_EMP 
WHERE SAL > (SELECT AVG(SAL) FROM CHAP10HW_EMP WHERE DEPTNO = 50); 

     
UPDATE CHAP10HW_EMP
         SET DEPTNO = 70
WHERE SAL > (SELECT AVG(SAL) FROM CHAP10HW_EMP WHERE DEPTNO = 50);
SELECT * FROM CHAP10HW_EMP;



SELECT *
  FROM CHAP10HW_EMP
WHERE HIREDATE > (SELECT MAX(HIREDATE) FROM CHAP10HW_EMP WHERE DEPTNO = 60); -- 데이터 확인

UPDATE CHAP10HW_EMP
    SET SAL = 1.1 * SAL, DEPTNO = 80
WHERE HIREDATE > (SELECT MAX(HIREDATE) FROM CHAP10HW_EMP WHERE DEPTNO = 60); -- 변경
 COMMIT;                     -- 커밋

--4
SELECT E.ENAME, E.JOB, E.MGR, E.HIREDATE, E.SAL, E.COMM, E.DEPTNO FROM CHAP10HW_EMP E, SALGRADE S
WHERE SAL BETWEEN S.LOSAL AND S.HISAL AND S.GRADE =5 ; -- 데이터 확인

DELETE FROM CHAP10HW_EMP                            -- TRUNCATE로는 안되네...
WHERE EMPNO  IN (SELECT E.EMPNO 
                                    FROM CHAP10HW_EMP E, SALGRADE S 
                                    WHERE SAL BETWEEN S.LOSAL AND S.HISAL 
                                    AND S.GRADE =5);
COMMIT;
